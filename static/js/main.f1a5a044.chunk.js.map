{"version":3,"sources":["store.js","components/layouts/AppNavbar.js","components/layouts/Spinner.js","components/clients/Clients.js","components/layouts/Sidebar.js","components/layouts/Dashboard.js","components/clients/AddClient.js","components/clients/EditClient.js","components/clients/ClientDetails.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","rootReducer","combineReducers","firebaseReducer","firestoreReducer","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","rrfProps","config","userProfile","useFirestoreForProfile","dispatch","createFirestoreInstance","AppNavbar","className","to","href","type","data-toggle","data-target","id","Component","Spinner","Clients","state","totalOwed","clients","this","props","parseFloat","toFixed","map","client","key","firstName","lastName","email","balance","reduce","total","toString","compose","firestoreConnect","collection","connect","ordered","Sidebar","Dashboard","AddClient","phone","onChange","e","setState","target","name","value","onSubmit","preventDefault","newClient","history","add","then","push","htmlFor","minLength","required","prototypes","PropTypes","object","isRequired","EditClient","updClient","current","update","doc","React","createRef","ref","defaultValue","storeAs","match","params","ClientDetails","showBalanceUpdate","balanceUpdateAmount","balanceSubmit","clientUpdate","onDelete","delete","balanceForm","placeholder","onClick","classnames","style","App","exact","path","component","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"mVAyBAA,IAASC,cAjBc,CACnBC,OAAQ,0CACRC,WAAY,2CACZC,YAAa,kDACbC,UAAW,2BACXC,cAAe,uCACfC,kBAAmB,aACnBC,MAAO,4CAYXR,IAASS,YAET,IAAMC,EAAcC,YAAgB,CAChCX,SAAUY,kBACVH,UAAWI,qBAMJC,EAAQC,YACfL,EAHiB,GAKjBM,OAAOC,8BAAgCD,OAAOC,gCAGvCC,EAAW,CAClBlB,aACAmB,OA1Bc,CACdC,YAAa,QACbC,wBAAwB,GAyBxBC,SAAUR,EAAMQ,SAChBC,mD,gCCxBWC,E,uKAlBP,OACI,yBAAKC,UAAU,uDACX,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,eAAeE,KAAK,KAA3C,gBACA,4BAAQF,UAAU,iBAAiBG,KAAK,SAASC,cAAY,WAAWC,cAAY,cAChF,0BAAML,UAAU,yBAEpB,yBAAKA,UAAU,2BAA2BM,GAAG,aACzC,wBAAIN,UAAU,cACV,wBAAIA,UAAU,YACV,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,YAAvB,qB,GAXJO,aCDT,SAASC,IACpB,OACI,yBAAKR,UAAU,YACX,uBAAGA,UAAU,gE,ICGnBS,E,4MACFC,MAAQ,CACJC,UAAW,M,uDAeL,IACEC,EAAYC,KAAKC,MAAjBF,QACAD,EAAcE,KAAKH,MAAnBC,UAER,OAAIC,EAEI,8BACI,yBAAKZ,UAAU,OACX,yBAAKA,UAAU,SACX,4BACI,uBAAGA,UAAU,iBADjB,aAIJ,yBAAKA,UAAU,SACX,wBAAIA,UAAU,6BAAd,cAEI,0BAAMA,UAAU,gBAAhB,IACMe,WAAWJ,GAAWK,QAAQ,OAMhD,2BAAOhB,UAAU,wCACb,2BAAOA,UAAU,iBACb,4BACI,oCACA,qCACA,uCACA,+BAGR,+BACKY,EAAQK,KAAI,SAAAC,GAAM,OACf,wBAAIC,IAAKD,EAAOZ,IACZ,4BAAKY,EAAOE,UAAZ,IAAwBF,EAAOG,UAC/B,4BAAKH,EAAOI,OACZ,gCAAMP,WAAWG,EAAOK,SAASP,QAAQ,IACzC,4BACI,kBAAC,IAAD,CAAMf,GAAE,kBAAaiB,EAAOZ,IAAMN,UAAU,4BAA2B,uBAAGA,UAAU,8BAApF,oBAUrB,kBAACQ,EAAD,S,gDA7DiBM,EAAOJ,GACnC,GAAII,EAAMF,UAAYF,EAAME,QAAS,CAAC,IAC1BA,EAAYE,EAAZF,QACR,OAAIA,EAIO,CAAED,UAHKC,EAAQY,QAAO,SAACC,EAAOP,GACjC,OAAOO,EAAQV,WAAWG,EAAOK,QAAQG,cAC1C,IAEE,KACX,OAAO,S,GAdKnB,aA2EPoB,cACXC,4BAAiB,SAAAd,GAAK,MAAI,CAAC,CAAEe,WAAY,eACzCC,aAAQ,SAACpB,EAAOI,GAAR,MAAmB,CACvBF,QAASF,EAAM1B,UAAU+C,QAAQnB,YAH1Be,CAKblB,GC7EauB,MARf,WACI,OACI,8BACI,kBAAC,IAAD,CAAM/B,GAAG,cAAcD,UAAU,0BAAyB,uBAAGA,UAAU,sBAAvE,UCWGiC,MAbf,WACI,OACI,0BAAMjC,UAAU,OACZ,0BAAMA,UAAU,UACZ,kBAAC,EAAD,OAEJ,0BAAMA,UAAU,SACZ,kBAAC,EAAD,S,wBCNVkC,E,4MACFxB,MAAQ,CACJU,UAAW,GACXC,SAAU,GACVC,MAAO,GACPa,MAAO,GACPZ,QAAS,I,EAGba,SAAW,SAACC,GAAD,OAAO,EAAKC,SAAL,eAAiBD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,S,EAE5DC,SAAW,SAACL,GACRA,EAAEM,iBAEF,IAAMC,EAAY,EAAKlC,MAHT,EAIiB,EAAKI,MAA5B9B,EAJM,EAINA,UAAW6D,EAJL,EAIKA,QAEM,KAAtBD,EAAUrB,UAAgBqB,EAAUrB,QAAU,GAEjDvC,EAAU8D,IAAI,CAAEjB,WAAY,WAAae,GAAWG,MAAK,kBAAMF,EAAQG,KAAK,S,uDAGtE,IAAD,EACgDnC,KAAKH,MAApDU,EADD,EACCA,UAAWC,EADZ,EACYA,SAAUC,EADtB,EACsBA,MAAOa,EAD7B,EAC6BA,MAAOZ,EADpC,EACoCA,QAEzC,OACI,8BACI,yBAAKvB,UAAU,YACX,yBAAKA,UAAU,SACX,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,gBACnB,uBAAGA,UAAU,6BADjB,WAMR,yBAAKA,UAAU,QACX,yBAAKA,UAAU,eAAc,0CAC7B,yBAAKA,UAAU,aACX,0BAAM0C,SAAU7B,KAAK6B,UACjB,yBAAK1C,UAAU,cACX,2BAAOiD,QAAQ,aAAf,cACA,2BAAO9C,KAAK,OAAOH,UAAU,eAAewC,KAAK,YAAYU,UAAU,IAAIC,UAAQ,EAACf,SAAUvB,KAAKuB,SAAUK,MAAOrB,KAExH,yBAAKpB,UAAU,cACX,2BAAOiD,QAAQ,YAAf,aACA,2BAAO9C,KAAK,OAAOH,UAAU,eAAewC,KAAK,WAAWU,UAAU,IAAIC,UAAQ,EAACf,SAAUvB,KAAKuB,SAAUK,MAAOpB,KAEvH,yBAAKrB,UAAU,cACX,2BAAOiD,QAAQ,SAAf,SACA,2BAAO9C,KAAK,QAAQH,UAAU,eAAewC,KAAK,QAAQW,UAAQ,EAACf,SAAUvB,KAAKuB,SAAUK,MAAOnB,KAEvG,yBAAKtB,UAAU,cACX,2BAAOiD,QAAQ,SAAf,SACA,2BAAO9C,KAAK,OAAOH,UAAU,eAAewC,KAAK,QAAQU,UAAU,KAAKC,UAAQ,EAACf,SAAUvB,KAAKuB,SAAUK,MAAON,KAErH,yBAAKnC,UAAU,cACX,2BAAOiD,QAAQ,WAAf,WACA,2BAAO9C,KAAK,OAAOH,UAAU,eAAewC,KAAK,UAAUJ,SAAUvB,KAAKuB,SAAUK,MAAOlB,KAE/F,2BAAOpB,KAAK,SAASsC,MAAM,SAASzC,UAAU,sC,GA3DlDO,aAoExB2B,EAAUkB,WAAY,CAClBpE,UAAWqE,IAAUC,OAAOC,YAGjB3B,mCAAmBM,GCrE5BsB,E,kDACF,WAAY1C,GAAQ,IAAD,8BACf,cAAMA,IAQV4B,SAAW,SAACL,GACRA,EAAEM,iBADY,MAGyB,EAAK7B,MAApCI,EAHM,EAGNA,OAAQlC,EAHF,EAGEA,UAAW6D,EAHb,EAGaA,QAErBY,EAAY,CACdrC,UAAW,EAAKA,UAAUsC,QAAQjB,MAClCpB,SAAU,EAAKA,SAASqC,QAAQjB,MAChCnB,MAAO,EAAKA,MAAMoC,QAAQjB,MAC1BN,MAAO,EAAKA,MAAMuB,QAAQjB,MAC1BlB,QAAS,EAAKA,QAAQmC,QAAQjB,MAAQ,EAAKlB,QAAQmC,QAAQjB,MAAQ,GAGvEzD,EACK2E,OAAO,CAAE9B,WAAY,UAAW+B,IAAK1C,EAAOZ,IAAMmD,GAClDV,MAAK,kBAAMF,EAAQG,KAAK,SAtB7B,EAAK5B,UAAYyC,IAAMC,YACvB,EAAKzC,SAAWwC,IAAMC,YACtB,EAAKxC,MAAQuC,IAAMC,YACnB,EAAK3B,MAAQ0B,IAAMC,YACnB,EAAKvC,QAAUsC,IAAMC,YANN,E,qDA2BT,IACE5C,EAAWL,KAAKC,MAAhBI,OAER,OAAIA,EAEI,8BACI,yBAAKlB,UAAU,YACX,yBAAKA,UAAU,SACX,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,gBACnB,uBAAGA,UAAU,6BADjB,WAMR,yBAAKA,UAAU,QACX,yBAAKA,UAAU,eAAc,2CAC7B,yBAAKA,UAAU,aACX,0BAAM0C,SAAU7B,KAAK6B,UACjB,yBAAK1C,UAAU,cACX,2BAAOiD,QAAQ,aAAf,cACA,2BAAO9C,KAAK,OAAOH,UAAU,eAAewC,KAAK,YAAYU,UAAU,IAAIC,UAAQ,EAACf,SAAUvB,KAAKuB,SAAU2B,IAAKlD,KAAKO,UAAW4C,aAAc9C,EAAOE,aAE3J,yBAAKpB,UAAU,cACX,2BAAOiD,QAAQ,YAAf,aACA,2BAAO9C,KAAK,OAAOH,UAAU,eAAewC,KAAK,WAAWU,UAAU,IAAIC,UAAQ,EAACf,SAAUvB,KAAKuB,SAAU2B,IAAKlD,KAAKQ,SAAU2C,aAAc9C,EAAOG,YAEzJ,yBAAKrB,UAAU,cACX,2BAAOiD,QAAQ,SAAf,SACA,2BAAO9C,KAAK,QAAQH,UAAU,eAAewC,KAAK,QAAQW,UAAQ,EAACf,SAAUvB,KAAKuB,SAAU2B,IAAKlD,KAAKS,MAAO0C,aAAc9C,EAAOI,SAEtI,yBAAKtB,UAAU,cACX,2BAAOiD,QAAQ,SAAf,SACA,2BAAO9C,KAAK,OAAOH,UAAU,eAAewC,KAAK,QAAQU,UAAU,KAAKC,UAAQ,EAACf,SAAUvB,KAAKuB,SAAU2B,IAAKlD,KAAKsB,MAAO6B,aAAc9C,EAAOiB,SAEpJ,yBAAKnC,UAAU,cACX,2BAAOiD,QAAQ,WAAf,WACA,2BAAO9C,KAAK,OAAOH,UAAU,eAAewC,KAAK,UAAUJ,SAAUvB,KAAKuB,SAAU2B,IAAKlD,KAAKU,QAASyC,aAAc9C,EAAOK,WAEhI,2BAAOpB,KAAK,SAASsC,MAAM,SAASzC,UAAU,kCAO3D,kBAACQ,EAAD,U,GAzEMD,aA8EzBiD,EAAWJ,WAAa,CACpBpE,UAAWqE,IAAUC,OAAOC,YAGjB5B,kBACXC,4BAAiB,SAAAd,GAAK,MAAI,CACtB,CAAEe,WAAY,UAAWoC,QAAS,SAAUL,IAAK9C,EAAMoD,MAAMC,OAAO7D,QAExEwB,aAAQ,WAA6BhB,GAA7B,IAAgBiB,EAAhB,EAAG/C,UAAa+C,QAAhB,MAAwC,CAC5Cb,OAAQa,EAAQb,QAAUa,EAAQb,OAAO,OALlCS,CAOb6B,G,kBCxFIY,E,4MACF1D,MAAQ,CACJ2D,mBAAmB,EACnBC,oBAAqB,I,EAGzBC,cAAgB,SAAAlC,GACZA,EAAEM,iBADe,MAGa,EAAK7B,MAA3BI,EAHS,EAGTA,OAAQlC,EAHC,EAGDA,UACRsF,EAAwB,EAAK5D,MAA7B4D,oBAEFE,EAAe,CACjBjD,QAASR,WAAWuD,IAExBtF,EAAU2E,OAAO,CAAE9B,WAAY,UAAW+B,IAAK1C,EAAOZ,IAAMkE,I,EAGhEpC,SAAW,SAAAC,GAAC,OAAI,EAAKC,SAAL,eAAiBD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,S,EAC1DgC,SAAW,WAAO,IAAD,EAC0B,EAAK3D,MAApCI,EADK,EACLA,OAAQlC,EADH,EACGA,UAAW6D,EADd,EACcA,QAE3B7D,EACK0F,OAAO,CAAE7C,WAAY,UAAW+B,IAAK1C,EAAOZ,KAC5CyC,KAAKF,EAAQG,KAAK,O,uDAGjB,IAAD,OACG9B,EAAWL,KAAKC,MAAhBI,OADH,EAE8CL,KAAKH,MAAhD2D,EAFH,EAEGA,kBAAmBC,EAFtB,EAEsBA,oBAEvBK,EAAc,GAgBlB,OAdIA,EADAN,EAEI,0BAAM3B,SAAU7B,KAAK0D,eACjB,yBAAKvE,UAAU,eACX,2BAAOG,KAAK,SAASgD,UAAQ,EAACnD,UAAU,eAAewC,KAAK,sBAAsBoC,YAAY,kBAAkBnC,MAAO6B,EAAqBlC,SAAUvB,KAAKuB,WAC3J,yBAAKpC,UAAU,sBACX,2BAAOG,KAAK,SAASsC,MAAM,SAASzC,UAAU,4BAMhD,KAGdkB,EAEI,8BACI,yBAAKlB,UAAU,OACX,yBAAKA,UAAU,SACX,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,gBACnB,uBAAGA,UAAU,6BADjB,UAIJ,yBAAKA,UAAU,SACX,yBAAKA,UAAU,yBACX,kBAAC,IAAD,CAAMC,GAAE,uBAAkBiB,EAAOZ,IAAMN,UAAU,uBAAjD,QACA,4BAAQ6E,QAAShE,KAAK4D,SAAUzE,UAAU,yBAA1C,aAIZ,6BACA,yBAAKA,UAAU,QACX,wBAAIA,UAAU,eACTkB,EAAOE,UADZ,IACwBF,EAAOG,UAE/B,yBAAKrB,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,SACX,yCAAe,IAAI,0BAAMA,UAAU,kBAAkBkB,EAAOZ,MAEhE,yBAAKN,UAAU,SACX,wBAAIA,UAAU,cAAd,WAEI,0BAAMA,UAAW8E,IAAW,CAC5B,cAAe5D,EAAOK,QAAU,EAChC,eAAgBL,EAAOK,SAAW,KAE7B,IAJL,IAIWR,WAAWG,EAAOK,SAASP,QAAQ,GAAI,KAElD,+BACI,uBAAGd,KAAK,IAAI2E,QAAS,SAACxC,GAAQ,EAAKC,SAAS,CAAE+B,mBAAoB,EAAK3D,MAAM2D,oBAAsBhC,EAAEM,mBACjG,uBAAG3C,UAAU,oBAAoB+E,MAAO,QAInDJ,IAGT,6BACA,wBAAI3E,UAAU,cACV,wBAAIA,UAAU,mBAAd,kBAAgDkB,EAAOI,OACvD,wBAAItB,UAAU,mBAAd,kBAAgDkB,EAAOiB,WAOpE,kBAAC3B,EAAD,U,GArGSD,aA0G5B6D,EAAchB,WAAa,CACvBpE,UAAWqE,IAAUC,OAAOC,YAGjB5B,kBACXC,4BAAiB,SAAAd,GAAK,MAAI,CACtB,CAAEe,WAAY,UAAWoC,QAAS,SAAUL,IAAK9C,EAAMoD,MAAMC,OAAO7D,QAExEwB,aAAQ,WAA6BhB,GAA7B,IAAgBiB,EAAhB,EAAG/C,UAAa+C,QAAhB,MAAwC,CAC5Cb,OAAQa,EAAQb,QAAUa,EAAQb,OAAO,OALlCS,CAObyC,G,OCvFaY,MAvBf,WAEE,OACE,kBAAC,IAAD,CAAU3F,MAAOA,GACf,kBAAC,6BAA+BI,EAChC,kBAAC,IAAD,KACE,yBAAKO,UAAU,OACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,aACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOiF,OAAK,EAACC,KAAK,IAAIC,UAAWlD,IACjC,kBAAC,IAAD,CAAOgD,OAAK,EAACC,KAAK,cAAcC,UAAWjD,IAC3C,kBAAC,IAAD,CAAO+C,OAAK,EAACC,KAAK,mBAAmBC,UAAW3B,IAChD,kBAAC,IAAD,CAAOyB,OAAK,EAACC,KAAK,cAAcC,UAAWf,WCjBrCgB,QACW,cAA7B7F,OAAO8F,SAASC,UAEe,UAA7B/F,OAAO8F,SAASC,UAEhB/F,OAAO8F,SAASC,SAASpB,MACvB,2DCZNqB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB/C,MAAK,SAAAgD,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.f1a5a044.chunk.js","sourcesContent":["import { createStore, combineReducers} from 'redux'\r\nimport firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\nimport 'firebase/database'\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\nimport { firestoreReducer, createFirestoreInstance } from 'redux-firestore'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAS_Y1ffT4ObeMy6c74dvBEPTETU3qyNRs\",\r\n    authDomain: \"react-client-panel-9832d.firebaseapp.com\",\r\n    databaseURL: \"https://react-client-panel-9832d.firebaseio.com\",\r\n    projectId: \"react-client-panel-9832d\",\r\n    storageBucket: \"react-client-panel-9832d.appspot.com\",\r\n    messagingSenderId: \"1822124726\",\r\n    appId: \"1:1822124726:web:2755c7db05d7b9da8c5417\"\r\n}\r\n\r\n//react-redux-firebase configuration\r\nconst rrfConfig = {\r\n    userProfile: 'users',\r\n    useFirestoreForProfile: true // Firestore for Profile instead of Realtime DB\r\n}\r\n\r\n//Init firebase instance\r\nfirebase.initializeApp(firebaseConfig)\r\n//Init firestore\r\nfirebase.firestore()\r\n\r\nconst rootReducer = combineReducers({\r\n    firebase: firebaseReducer,\r\n    firestore: firestoreReducer\r\n})\r\n\r\n//Create intial state\r\nconst initialState = {};\r\n\r\nexport let store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n)\r\n\r\nexport let rrfProps = {\r\n    firebase,\r\n    config: rrfConfig,\r\n    dispatch: store.dispatch,\r\n    createFirestoreInstance // <- needed if using firestore\r\n  }","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass AppNavbar extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-md navbar-dark bg-primary mb-4\">\r\n                <Link to=\"/\" className=\"navbar-brand\" href=\"#\">Client Panel</Link>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\">\r\n                    <span className=\"navbar-toggler-icon\" />\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                    <ul className=\"navbar-nav\">\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/\" className=\"nav-link\">Dashboard</Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AppNavbar\r\n","import React from 'react'\r\n\r\nexport default function Spinner() {\r\n    return (\r\n        <div className=\"row mt-5\">\r\n            <i className=\"fas fa-circle-notch fa-spin fa-3x align-middle mr-5 col-12\"></i>\r\n        </div>\r\n    )\r\n}","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport { compose } from 'redux'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport Spinner from '../layouts/Spinner'\r\n\r\nclass Clients extends Component {\r\n    state = {\r\n        totalOwed: null\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.clients !== state.clients) {\r\n            const { clients } = props\r\n            if (clients) {\r\n                const total = clients.reduce((total, client) => {\r\n                    return total + parseFloat(client.balance.toString())\r\n                }, 0)\r\n                return { totalOwed: total }\r\n            } return null\r\n        } return null\r\n    }\r\n\r\n    render() {\r\n        const { clients } = this.props\r\n        const { totalOwed } = this.state\r\n\r\n        if (clients) {\r\n            return (\r\n                <span>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-6\">\r\n                            <h2>\r\n                                <i className=\"fas fa-users\"></i> Clients\r\n                            </h2>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <h5 className=\"text-right text-secondary\">\r\n                                Total Owed:\r\n                                <span className=\"text-primary\">\r\n                                    ${parseFloat(totalOwed).toFixed(2)}\r\n                                </span>\r\n                            </h5>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <table className=\"table table-striped table-responsive\">\r\n                        <thead className=\"thead inverse\">\r\n                            <tr>\r\n                                <th>Name</th>\r\n                                <th>Email</th>\r\n                                <th>Balance</th>\r\n                                <th />\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {clients.map(client => (\r\n                                <tr key={client.id}>\r\n                                    <td>{client.firstName} {client.lastName}</td>\r\n                                    <td>{client.email}</td>\r\n                                    <td>${parseFloat(client.balance).toFixed(2)}</td>\r\n                                    <td>\r\n                                        <Link to={`/client/${client.id}`} className=\"btn btn-secondary btn-sm\"><i className=\"fas fa-arrow-circle-right\"></i> Details</Link>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </span>\r\n            )\r\n        }\r\n        else {\r\n            return <Spinner />\r\n        }\r\n    }\r\n}\r\nClients.propTypes = {\r\n    firestore: PropTypes.object.isRequired,\r\n    clients: PropTypes.array\r\n}\r\n\r\nexport default compose(\r\n    firestoreConnect(props => [{ collection: 'clients' }]),\r\n    connect((state, props) => ({\r\n        clients: state.firestore.ordered.clients\r\n    }))\r\n)(Clients)","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Sidebar() {\r\n    return (\r\n        <span>\r\n            <Link to=\"/client/add\" className=\"btn btn-success btn-sm\"><i className=\"fa fa-plus-circle\" /> New</Link>\r\n        </span>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import React from 'react'\r\nimport Clients from '../clients/Clients'\r\nimport Sidebar from '../layouts/Sidebar'\r\n\r\nfunction Dashboard() {\r\n    return (\r\n        <span className=\"row\">\r\n            <span className=\"col-10\">\r\n                <Clients />\r\n            </span>\r\n            <span className=\"col-2\">\r\n                <Sidebar />\r\n            </span>\r\n        </span>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\n\r\nclass AddClient extends Component {\r\n    state = {\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        phone: '',\r\n        balance: ''\r\n    }\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value })\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        const newClient = this.state\r\n        const { firestore, history } = this.props\r\n\r\n        if(newClient.balance === '') newClient.balance = 0\r\n\r\n        firestore.add({ collection: 'clients' }, newClient).then(() => history.push('/'))\r\n    }\r\n\r\n    render() {\r\n        let { firstName, lastName, email, phone, balance } = this.state\r\n\r\n        return (\r\n            <span>\r\n                <div className=\"row mb-2\">\r\n                    <div className=\"col-6\">\r\n                        <Link to=\"/\" className=\"btn btn-link\">\r\n                            <i className=\"fas fa-arrow-circle-left\" /> Back\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"card\">\r\n                    <div className=\"card-header\"><h3>Add Cient</h3></div>\r\n                    <div className=\"card-body\">\r\n                        <form onSubmit={this.onSubmit}>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"firstName\">First Name</label>\r\n                                <input type=\"text\" className=\"form-control\" name=\"firstName\" minLength=\"2\" required onChange={this.onChange} value={firstName} />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"lastName\">Last Name</label>\r\n                                <input type=\"text\" className=\"form-control\" name=\"lastName\" minLength=\"2\" required onChange={this.onChange} value={lastName} />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"email\">Email</label>\r\n                                <input type=\"email\" className=\"form-control\" name=\"email\" required onChange={this.onChange} value={email} />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"phone\">Phone</label>\r\n                                <input type=\"text\" className=\"form-control\" name=\"phone\" minLength=\"10\" required onChange={this.onChange} value={phone} />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"balance\">Balance</label>\r\n                                <input type=\"text\" className=\"form-control\" name=\"balance\" onChange={this.onChange} value={balance} />\r\n                            </div>\r\n                            <input type=\"submit\" value=\"Submit\" className=\"btn btn-primary btn-block\" />\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </span>\r\n        )\r\n    }\r\n}\r\n\r\nAddClient.prototypes ={\r\n    firestore: PropTypes.object.isRequired\r\n}\r\n\r\nexport default firestoreConnect()(AddClient)","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport { compose } from 'redux'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport Spinner from '../layouts/Spinner'\r\n\r\nclass EditClient extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.firstName = React.createRef()\r\n        this.lastName = React.createRef()\r\n        this.email = React.createRef()\r\n        this.phone = React.createRef()\r\n        this.balance = React.createRef()\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        const { client, firestore, history } = this.props\r\n\r\n        const updClient = {\r\n            firstName: this.firstName.current.value,\r\n            lastName: this.lastName.current.value,\r\n            email: this.email.current.value,\r\n            phone: this.phone.current.value,\r\n            balance: this.balance.current.value ? this.balance.current.value : 0\r\n        }\r\n\r\n        firestore\r\n            .update({ collection: 'clients', doc: client.id }, updClient)\r\n            .then(() => history.push('/'))\r\n    }\r\n\r\n    render() {\r\n        const { client } = this.props\r\n\r\n        if (client) {\r\n            return (\r\n                <span>\r\n                    <div className=\"row mb-2\">\r\n                        <div className=\"col-6\">\r\n                            <Link to=\"/\" className=\"btn btn-link\">\r\n                                <i className=\"fas fa-arrow-circle-left\" /> Back\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"card\">\r\n                        <div className=\"card-header\"><h3>Edit Cient</h3></div>\r\n                        <div className=\"card-body\">\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"firstName\">First Name</label>\r\n                                    <input type=\"text\" className=\"form-control\" name=\"firstName\" minLength=\"2\" required onChange={this.onChange} ref={this.firstName} defaultValue={client.firstName} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"lastName\">Last Name</label>\r\n                                    <input type=\"text\" className=\"form-control\" name=\"lastName\" minLength=\"2\" required onChange={this.onChange} ref={this.lastName} defaultValue={client.lastName} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"email\">Email</label>\r\n                                    <input type=\"email\" className=\"form-control\" name=\"email\" required onChange={this.onChange} ref={this.email} defaultValue={client.email} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"phone\">Phone</label>\r\n                                    <input type=\"text\" className=\"form-control\" name=\"phone\" minLength=\"10\" required onChange={this.onChange} ref={this.phone} defaultValue={client.phone} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"balance\">Balance</label>\r\n                                    <input type=\"text\" className=\"form-control\" name=\"balance\" onChange={this.onChange} ref={this.balance} defaultValue={client.balance} />\r\n                                </div>\r\n                                <input type=\"submit\" value=\"Submit\" className=\"btn btn-primary btn-block\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </span>\r\n            )\r\n        } else {\r\n            return <Spinner />\r\n        }\r\n    }\r\n}\r\n\r\nEditClient.prototypes = {\r\n    firestore: PropTypes.object.isRequired\r\n}\r\n\r\nexport default compose(\r\n    firestoreConnect(props => [\r\n        { collection: 'clients', storeAs: 'client', doc: props.match.params.id }\r\n    ]),\r\n    connect(({ firestore: { ordered } }, props) => ({\r\n        client: ordered.client && ordered.client[0]\r\n    }))\r\n)(EditClient)","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport { compose } from 'redux'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport Spinner from '../layouts/Spinner'\r\nimport classnames from 'classnames'\r\n\r\nclass ClientDetails extends Component {\r\n    state = {\r\n        showBalanceUpdate: false,\r\n        balanceUpdateAmount: ''\r\n    }\r\n\r\n    balanceSubmit = e => {\r\n        e.preventDefault()\r\n\r\n        const { client, firestore } = this.props\r\n        const { balanceUpdateAmount } = this.state\r\n\r\n        const clientUpdate = {\r\n            balance: parseFloat(balanceUpdateAmount)\r\n        }\r\n        firestore.update({ collection: 'clients', doc: client.id }, clientUpdate)\r\n    }\r\n\r\n    onChange = e => this.setState({ [e.target.name]: e.target.value })\r\n    onDelete = () => {\r\n        const { client, firestore, history } = this.props\r\n\r\n        firestore\r\n            .delete({ collection: 'clients', doc: client.id })\r\n            .then(history.push('/'))\r\n    }\r\n\r\n    render() {\r\n        const { client } = this.props\r\n        const { showBalanceUpdate, balanceUpdateAmount } = this.state\r\n\r\n        let balanceForm = ''\r\n        if (showBalanceUpdate) {\r\n            balanceForm = (\r\n                <form onSubmit={this.balanceSubmit}>\r\n                    <div className=\"input-group\">\r\n                        <input type=\"number\" required className=\"form-control\" name=\"balanceUpdateAmount\" placeholder=\"Add New Balance\" value={balanceUpdateAmount} onChange={this.onChange} />\r\n                        <div className=\"input-group-append\">\r\n                            <input type=\"submit\" value=\"Update\" className=\"btn btn-outline-dark\" />\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            )\r\n        } else {\r\n            balanceForm = null\r\n        }\r\n\r\n        if (client) {\r\n            return (\r\n                <span>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-6\">\r\n                            <Link to=\"/\" className=\"btn btn-link\">\r\n                                <i className=\"fas fa-arrow-circle-left\"></i> Back\r\n                            </Link>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <div className=\"btn-group float-right\">\r\n                                <Link to={`/client/edit/${client.id}`} className=\"btn btn-sm btn-dark\">Edit</Link>\r\n                                <button onClick={this.onDelete} className=\"btn btn-sm btn-danger\">Delete</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <hr />\r\n                    <div className=\"card\">\r\n                        <h4 className=\"card-header\">\r\n                            {client.firstName} {client.lastName}\r\n                        </h4>\r\n                        <div className=\"card-body\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-6\">\r\n                                    <h5>Client ID:{' '}<span className=\"text-secondary\">{client.id}</span></h5>\r\n                                </div>\r\n                                <div className=\"col-6\">\r\n                                    <h4 className=\"pull-right\">\r\n                                        Balance:\r\n                                        <span className={classnames({\r\n                                        'text-danger': client.balance > 0,\r\n                                        'text-success': client.balance <= 0\r\n                                    })}>\r\n                                            {' '}${parseFloat(client.balance).toFixed(2)}{' '}\r\n                                        </span>\r\n                                        <small>\r\n                                            <a href=\" \" onClick={(e) => { this.setState({ showBalanceUpdate: !this.state.showBalanceUpdate }); e.preventDefault() }}>\r\n                                                <i className=\"fas fa-pencil-alt\" style={{}}></i>\r\n                                            </a>\r\n                                        </small>\r\n                                    </h4>\r\n                                    {balanceForm}\r\n                                </div>\r\n                            </div>\r\n                            <hr />\r\n                            <ul className=\"list-group\">\r\n                                <li className=\"list-group-item\">Contact Email: {client.email}</li>\r\n                                <li className=\"list-group-item\">Contact Phone: {client.phone}</li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </span>\r\n            )\r\n        } else {\r\n            return <Spinner />\r\n        }\r\n    }\r\n}\r\n\r\nClientDetails.prototypes = {\r\n    firestore: PropTypes.object.isRequired\r\n}\r\n\r\nexport default compose(\r\n    firestoreConnect(props => [\r\n        { collection: 'clients', storeAs: 'client', doc: props.match.params.id }\r\n    ]),\r\n    connect(({ firestore: { ordered } }, props) => ({\r\n        client: ordered.client && ordered.client[0]\r\n    }))\r\n)(ClientDetails)","import React from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'\n\nimport { Provider } from 'react-redux'\nimport {store, rrfProps} from './store'\nimport { ReactReduxFirebaseProvider} from 'react-redux-firebase'\n\nimport AppNavbar from './components/layouts/AppNavbar'\nimport Dashboard from './components/layouts/Dashboard'\nimport AddClient from './components/clients/AddClient'\nimport EditClient from './components/clients/EditClient'\nimport ClientDetails from './components/clients/ClientDetails'\n\nimport './App.css';\n\n\nfunction App() {\n\n  return (\n    <Provider store={store}>\n      <ReactReduxFirebaseProvider {...rrfProps}>\n      <Router>\n        <div className=\"App\">\n          <AppNavbar />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Dashboard} />\n              <Route exact path=\"/client/add\" component={AddClient} />\n              <Route exact path=\"/client/edit/:id\" component={EditClient} />\n              <Route exact path=\"/client/:id\" component={ClientDetails} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n      </ReactReduxFirebaseProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}