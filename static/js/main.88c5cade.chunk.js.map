{"version":3,"sources":["components/layouts/Spinner.js","components/helpers/auth.js","store.js","components/layouts/AppNavbar.js","components/clients/Clients.js","components/layouts/Sidebar.js","components/layouts/Dashboard.js","components/clients/AddClient.js","components/clients/EditClient.js","components/clients/ClientDetails.js","components/auth/Login.js","App.js","serviceWorker.js","index.js"],"names":["Spinner","className","locationHelper","locationHelperBuilder","UserIsAuthenticated","connectedRouterRedirect","wrapperDisplayName","AuthenticatingComponent","LoadingScreen","allowRedirectBack","redirectPath","state","ownProps","getRedirectQueryParam","authenticatingSelector","firebase","auth","isInitializing","profile","isLoaded","authenticatedSelector","isEmpty","UserIsNotAuthenticated","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","rootReducer","combineReducers","firebaseReducer","firestoreReducer","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","rrfProps","config","userProfile","useFirestoreForProfile","dispatch","createFirestoreInstance","AppNavbar","isAuthenticated","onLogoutClick","e","preventDefault","props","logout","this","to","href","type","data-toggle","data-target","id","Fragment","email","onClick","uid","Component","protoTypes","PropTypes","object","isRequired","compose","firebaseConnect","connect","Clients","totalOwed","clients","parseFloat","toFixed","map","client","key","firstName","lastName","balance","reduce","total","toString","firestoreConnect","collection","ordered","Sidebar","Dashboard","AddClient","phone","onChange","setState","target","name","value","onSubmit","newClient","history","add","then","push","htmlFor","minLength","required","prototypes","EditClient","updClient","current","update","doc","React","createRef","ref","defaultValue","storeAs","match","params","ClientDetails","showBalanceUpdate","balanceUpdateAmount","balanceSubmit","clientUpdate","onDelete","delete","balanceForm","placeholder","classnames","style","Login","password","login","catch","err","alert","App","exact","path","component","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.88c5cade.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Spinner() {\r\n    return (\r\n        <div className=\"row mt-5\">\r\n            <i className=\"fas fa-circle-notch fa-spin fa-3x align-middle mr-5 col-12\"></i>\r\n        </div>\r\n    )\r\n}","import locationHelperBuilder from 'redux-auth-wrapper/history4/locationHelper'\r\nimport { connectedRouterRedirect } from 'redux-auth-wrapper/history4/redirect'\r\n// import createHistory from 'history/createBrowserHistory'\r\nimport LoadingScreen from '../layouts/Spinner'\r\n\r\nconst locationHelper = locationHelperBuilder({});\r\n// const browserHistory = createHistory()\r\n\r\nexport const UserIsAuthenticated = connectedRouterRedirect({\r\n  wrapperDisplayName: 'UserIsAuthenticated',\r\n  AuthenticatingComponent: LoadingScreen,\r\n  allowRedirectBack: true,\r\n  redirectPath: (state, ownProps) =>\r\n    locationHelper.getRedirectQueryParam(ownProps) || '/login',\r\n  authenticatingSelector: ({ firebase: { auth, profile, isInitializing } }) =>\r\n    !auth.isLoaded || isInitializing === true,\r\n  authenticatedSelector: ({ firebase: { auth } }) =>\r\n    auth.isLoaded && !auth.isEmpty\r\n});\r\n\r\nexport const UserIsNotAuthenticated = connectedRouterRedirect({\r\n  wrapperDisplayName: 'UserIsNotAuthenticated',\r\n  AuthenticatingComponent: LoadingScreen,\r\n  allowRedirectBack: false,\r\n  redirectPath: (state, ownProps) =>\r\n    locationHelper.getRedirectQueryParam(ownProps) || '/',\r\n  authenticatingSelector: ({ firebase: { auth, isInitializing } }) =>\r\n    !auth.isLoaded || isInitializing === true,\r\n  authenticatedSelector: ({ firebase: { auth } }) =>\r\n    auth.isLoaded && auth.isEmpty\r\n});","import { createStore, combineReducers} from 'redux'\r\nimport firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\nimport 'firebase/database'\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\nimport { firestoreReducer, createFirestoreInstance } from 'redux-firestore'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAS_Y1ffT4ObeMy6c74dvBEPTETU3qyNRs\",\r\n    authDomain: \"react-client-panel-9832d.firebaseapp.com\",\r\n    databaseURL: \"https://react-client-panel-9832d.firebaseio.com\",\r\n    projectId: \"react-client-panel-9832d\",\r\n    storageBucket: \"react-client-panel-9832d.appspot.com\",\r\n    messagingSenderId: \"1822124726\",\r\n    appId: \"1:1822124726:web:2755c7db05d7b9da8c5417\"\r\n}\r\n\r\n//react-redux-firebase configuration\r\nconst rrfConfig = {\r\n    userProfile: 'users',\r\n    useFirestoreForProfile: true // Firestore for Profile instead of Realtime DB\r\n}\r\n\r\n//Init firebase instance\r\nfirebase.initializeApp(firebaseConfig)\r\n//Init firestore\r\nfirebase.firestore()\r\n\r\nconst rootReducer = combineReducers({\r\n    firebase: firebaseReducer,\r\n    firestore: firestoreReducer\r\n})\r\n\r\n//Create intial state\r\nconst initialState = {};\r\n\r\nexport let store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n)\r\n\r\nexport let rrfProps = {\r\n    firebase,\r\n    config: rrfConfig,\r\n    dispatch: store.dispatch,\r\n    createFirestoreInstance // <- needed if using firestore\r\n  }","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport { compose } from 'redux'\r\nimport { connect } from 'react-redux'\r\nimport { firebaseConnect } from 'react-redux-firebase'\r\n\r\nclass AppNavbar extends Component {\r\n    state = {\r\n        isAuthenticated: true\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { auth } = props\r\n\r\n        if (auth.uid) {\r\n            return { isAuthenticated: true }\r\n        } else {\r\n            return { isAuthenticated: false }\r\n        }\r\n    }\r\n\r\n    onLogoutClick = e => {\r\n        e.preventDefault()\r\n\r\n        const { firebase } = this.props\r\n        firebase.logout()\r\n    }\r\n\r\n    render() {\r\n        const { isAuthenticated } = this.state\r\n        const { auth } = this.props\r\n        return (\r\n            <nav className=\"navbar navbar-expand-md navbar-dark bg-primary mb-4\">\r\n                <Link to=\"/\" className=\"navbar-brand\" href=\"#\">Client Panel</Link>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\">\r\n                    <span className=\"navbar-toggler-icon\" />\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                    {isAuthenticated ? (<React.Fragment>\r\n                        <ul className=\"navbar-nav mr-auto\">\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/\" className=\"nav-link\">Dashboard</Link>\r\n                            </li>\r\n                        </ul>\r\n                        <ul className=\"navbar-nav ml-auto\">\r\n                            <li className=\"nav-item\">\r\n                                <span className=\"nav-link\">{auth.email}</span>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a href=\"#!\" onClick={this.onLogoutClick} className=\"nav-link\">Logout</a>\r\n                            </li>\r\n                        </ul>\r\n                    </React.Fragment>\r\n                    ) : null}\r\n\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nAppNavbar.protoTypes = {\r\n    firebase: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired\r\n}\r\n\r\nexport default compose(\r\n    firebaseConnect(),\r\n    connect((state, props) => ({\r\n        auth: state.firebase.auth\r\n    }))\r\n)(AppNavbar)\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport { compose } from 'redux'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport Spinner from '../layouts/Spinner'\r\n\r\nclass Clients extends Component {\r\n    state = {\r\n        totalOwed: null\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.clients !== state.clients) {\r\n            const { clients } = props\r\n            if (clients) {\r\n                const total = clients.reduce((total, client) => {\r\n                    return total + parseFloat(client.balance.toString())\r\n                }, 0)\r\n                return { totalOwed: total }\r\n            } return null\r\n        } return null\r\n    }\r\n\r\n    render() {\r\n        const { clients } = this.props\r\n        const { totalOwed } = this.state\r\n\r\n        if (clients) {\r\n            return (\r\n                <span>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-6\">\r\n                            <h2>\r\n                                <i className=\"fas fa-users\"></i> Clients\r\n                            </h2>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <h5 className=\"text-right text-secondary\">\r\n                                Total Owed:\r\n                                <span className=\"text-primary\">\r\n                                    ${parseFloat(totalOwed).toFixed(2)}\r\n                                </span>\r\n                            </h5>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <table className=\"table table-striped table-responsive\">\r\n                        <thead className=\"thead inverse\">\r\n                            <tr>\r\n                                <th>Name</th>\r\n                                <th>Email</th>\r\n                                <th>Balance</th>\r\n                                <th />\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {clients.map(client => (\r\n                                <tr key={client.id}>\r\n                                    <td>{client.firstName} {client.lastName}</td>\r\n                                    <td>{client.email}</td>\r\n                                    <td>${parseFloat(client.balance).toFixed(2)}</td>\r\n                                    <td>\r\n                                        <Link to={`/client/${client.id}`} className=\"btn btn-secondary btn-sm\"><i className=\"fas fa-arrow-circle-right\"></i> Details</Link>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </span>\r\n            )\r\n        }\r\n        else {\r\n            return <Spinner />\r\n        }\r\n    }\r\n}\r\nClients.propTypes = {\r\n    firestore: PropTypes.object.isRequired,\r\n    clients: PropTypes.array\r\n}\r\n\r\nexport default compose(\r\n    firestoreConnect(props => [{ collection: 'clients' }]),\r\n    connect((state, props) => ({\r\n        clients: state.firestore.ordered.clients\r\n    }))\r\n)(Clients)","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Sidebar() {\r\n    return (\r\n        <span>\r\n            <Link to=\"/client/add\" className=\"btn btn-success btn-sm\"><i className=\"fa fa-plus-circle\" /> New</Link>\r\n        </span>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import React from 'react'\r\nimport Clients from '../clients/Clients'\r\nimport Sidebar from '../layouts/Sidebar'\r\n\r\nfunction Dashboard() {\r\n    return (\r\n        <span className=\"row\">\r\n            <span className=\"col-10\">\r\n                <Clients />\r\n            </span>\r\n            <span className=\"col-2\">\r\n                <Sidebar />\r\n            </span>\r\n        </span>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\n\r\nclass AddClient extends Component {\r\n    state = {\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        phone: '',\r\n        balance: ''\r\n    }\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value })\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        const newClient = this.state\r\n        const { firestore, history } = this.props\r\n\r\n        if(newClient.balance === '') newClient.balance = 0\r\n\r\n        firestore.add({ collection: 'clients' }, newClient).then(() => history.push('/'))\r\n    }\r\n\r\n    render() {\r\n        let { firstName, lastName, email, phone, balance } = this.state\r\n\r\n        return (\r\n            <span>\r\n                <div className=\"row mb-2\">\r\n                    <div className=\"col-6\">\r\n                        <Link to=\"/\" className=\"btn btn-link\">\r\n                            <i className=\"fas fa-arrow-circle-left\" /> Back\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"card\">\r\n                    <div className=\"card-header\"><h3>Add Cient</h3></div>\r\n                    <div className=\"card-body\">\r\n                        <form onSubmit={this.onSubmit}>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"firstName\">First Name</label>\r\n                                <input type=\"text\" className=\"form-control\" name=\"firstName\" minLength=\"2\" required onChange={this.onChange} value={firstName} />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"lastName\">Last Name</label>\r\n                                <input type=\"text\" className=\"form-control\" name=\"lastName\" minLength=\"2\" required onChange={this.onChange} value={lastName} />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"email\">Email</label>\r\n                                <input type=\"email\" className=\"form-control\" name=\"email\" required onChange={this.onChange} value={email} />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"phone\">Phone</label>\r\n                                <input type=\"text\" className=\"form-control\" name=\"phone\" minLength=\"10\" required onChange={this.onChange} value={phone} />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"balance\">Balance</label>\r\n                                <input type=\"text\" className=\"form-control\" name=\"balance\" onChange={this.onChange} value={balance} />\r\n                            </div>\r\n                            <input type=\"submit\" value=\"Submit\" className=\"btn btn-primary btn-block\" />\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </span>\r\n        )\r\n    }\r\n}\r\n\r\nAddClient.prototypes ={\r\n    firestore: PropTypes.object.isRequired\r\n}\r\n\r\nexport default firestoreConnect()(AddClient)","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport { compose } from 'redux'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport Spinner from '../layouts/Spinner'\r\n\r\nclass EditClient extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.firstName = React.createRef()\r\n        this.lastName = React.createRef()\r\n        this.email = React.createRef()\r\n        this.phone = React.createRef()\r\n        this.balance = React.createRef()\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        const { client, firestore, history } = this.props\r\n\r\n        const updClient = {\r\n            firstName: this.firstName.current.value,\r\n            lastName: this.lastName.current.value,\r\n            email: this.email.current.value,\r\n            phone: this.phone.current.value,\r\n            balance: this.balance.current.value ? this.balance.current.value : 0\r\n        }\r\n\r\n        firestore\r\n            .update({ collection: 'clients', doc: client.id }, updClient)\r\n            .then(() => history.push('/'))\r\n    }\r\n\r\n    render() {\r\n        const { client } = this.props\r\n\r\n        if (client) {\r\n            return (\r\n                <span>\r\n                    <div className=\"row mb-2\">\r\n                        <div className=\"col-6\">\r\n                            <Link to=\"/\" className=\"btn btn-link\">\r\n                                <i className=\"fas fa-arrow-circle-left\" /> Back\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"card\">\r\n                        <div className=\"card-header\"><h3>Edit Cient</h3></div>\r\n                        <div className=\"card-body\">\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"firstName\">First Name</label>\r\n                                    <input type=\"text\" className=\"form-control\" name=\"firstName\" minLength=\"2\" required onChange={this.onChange} ref={this.firstName} defaultValue={client.firstName} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"lastName\">Last Name</label>\r\n                                    <input type=\"text\" className=\"form-control\" name=\"lastName\" minLength=\"2\" required onChange={this.onChange} ref={this.lastName} defaultValue={client.lastName} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"email\">Email</label>\r\n                                    <input type=\"email\" className=\"form-control\" name=\"email\" required onChange={this.onChange} ref={this.email} defaultValue={client.email} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"phone\">Phone</label>\r\n                                    <input type=\"text\" className=\"form-control\" name=\"phone\" minLength=\"10\" required onChange={this.onChange} ref={this.phone} defaultValue={client.phone} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"balance\">Balance</label>\r\n                                    <input type=\"text\" className=\"form-control\" name=\"balance\" onChange={this.onChange} ref={this.balance} defaultValue={client.balance} />\r\n                                </div>\r\n                                <input type=\"submit\" value=\"Submit\" className=\"btn btn-primary btn-block\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </span>\r\n            )\r\n        } else {\r\n            return <Spinner />\r\n        }\r\n    }\r\n}\r\n\r\nEditClient.prototypes = {\r\n    firestore: PropTypes.object.isRequired\r\n}\r\n\r\nexport default compose(\r\n    firestoreConnect(props => [\r\n        { collection: 'clients', storeAs: 'client', doc: props.match.params.id }\r\n    ]),\r\n    connect(({ firestore: { ordered } }, props) => ({\r\n        client: ordered.client && ordered.client[0]\r\n    }))\r\n)(EditClient)","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport { compose } from 'redux'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport Spinner from '../layouts/Spinner'\r\nimport classnames from 'classnames'\r\n\r\nclass ClientDetails extends Component {\r\n    state = {\r\n        showBalanceUpdate: false,\r\n        balanceUpdateAmount: ''\r\n    }\r\n\r\n    balanceSubmit = e => {\r\n        e.preventDefault()\r\n\r\n        const { client, firestore } = this.props\r\n        const { balanceUpdateAmount } = this.state\r\n\r\n        const clientUpdate = {\r\n            balance: parseFloat(balanceUpdateAmount)\r\n        }\r\n        firestore.update({ collection: 'clients', doc: client.id }, clientUpdate)\r\n    }\r\n\r\n    onChange = e => this.setState({ [e.target.name]: e.target.value })\r\n    onDelete = () => {\r\n        const { client, firestore, history } = this.props\r\n\r\n        firestore\r\n            .delete({ collection: 'clients', doc: client.id })\r\n            .then(history.push('/'))\r\n    }\r\n\r\n    render() {\r\n        const { client } = this.props\r\n        const { showBalanceUpdate, balanceUpdateAmount } = this.state\r\n\r\n        let balanceForm = ''\r\n        if (showBalanceUpdate) {\r\n            balanceForm = (\r\n                <form onSubmit={this.balanceSubmit}>\r\n                    <div className=\"input-group\">\r\n                        <input type=\"number\" required className=\"form-control\" name=\"balanceUpdateAmount\" placeholder=\"Add New Balance\" value={balanceUpdateAmount} onChange={this.onChange} />\r\n                        <div className=\"input-group-append\">\r\n                            <input type=\"submit\" value=\"Update\" className=\"btn btn-outline-dark\" />\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            )\r\n        } else {\r\n            balanceForm = null\r\n        }\r\n\r\n        if (client) {\r\n            return (\r\n                <span>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-6\">\r\n                            <Link to=\"/\" className=\"btn btn-link\">\r\n                                <i className=\"fas fa-arrow-circle-left\"></i> Back\r\n                            </Link>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <div className=\"btn-group float-right\">\r\n                                <Link to={`/client/edit/${client.id}`} className=\"btn btn-sm btn-dark\">Edit</Link>\r\n                                <button onClick={this.onDelete} className=\"btn btn-sm btn-danger\">Delete</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <hr />\r\n                    <div className=\"card\">\r\n                        <h4 className=\"card-header\">\r\n                            {client.firstName} {client.lastName}\r\n                        </h4>\r\n                        <div className=\"card-body\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-6\">\r\n                                    <h5>Client ID:{' '}<span className=\"text-secondary\">{client.id}</span></h5>\r\n                                </div>\r\n                                <div className=\"col-6\">\r\n                                    <h4 className=\"pull-right\">\r\n                                        Balance:\r\n                                        <span className={classnames({\r\n                                        'text-danger': client.balance > 0,\r\n                                        'text-success': client.balance <= 0\r\n                                    })}>\r\n                                            {' '}${parseFloat(client.balance).toFixed(2)}{' '}\r\n                                        </span>\r\n                                        <small>\r\n                                            <a href=\" \" onClick={(e) => { this.setState({ showBalanceUpdate: !this.state.showBalanceUpdate }); e.preventDefault() }}>\r\n                                                <i className=\"fas fa-pencil-alt\" style={{}}></i>\r\n                                            </a>\r\n                                        </small>\r\n                                    </h4>\r\n                                    {balanceForm}\r\n                                </div>\r\n                            </div>\r\n                            <hr />\r\n                            <ul className=\"list-group\">\r\n                                <li className=\"list-group-item\">Contact Email: {client.email}</li>\r\n                                <li className=\"list-group-item\">Contact Phone: {client.phone}</li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </span>\r\n            )\r\n        } else {\r\n            return <Spinner />\r\n        }\r\n    }\r\n}\r\n\r\nClientDetails.prototypes = {\r\n    firestore: PropTypes.object.isRequired\r\n}\r\n\r\nexport default compose(\r\n    firestoreConnect(props => [\r\n        { collection: 'clients', storeAs: 'client', doc: props.match.params.id }\r\n    ]),\r\n    connect(({ firestore: { ordered } }, props) => ({\r\n        client: ordered.client && ordered.client[0]\r\n    }))\r\n)(ClientDetails)","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { compose } from 'redux'\r\n// import { connect } from 'react-redux'\r\nimport { firebaseConnect } from 'react-redux-firebase'\r\n\r\nclass Login extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n\r\n    onChange = e => this.setState({ [e.target.name]: e.target.value })\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const { firebase } = this.props\r\n        const { email, password } = this.state\r\n\r\n        firebase\r\n            .login({ email, password })\r\n            .catch(err => alert('Invalid Login Credentials'))\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 mx-auto\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            <h2 className=\"text-center pb-4 pt-3\">\r\n                                <span className=\"text-primary\">\r\n                                    <i className=\"fas fa-lock\" />{' '}\r\n                                    Lock\r\n                                </span>\r\n                            </h2>\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"email\">Email</label>\r\n                                    <input type=\"text\" className=\"form-control\" name=\"email\" required value={this.state.email} onChange={this.onChange} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"password\">Password</label>\r\n                                    <input type=\"password\" className=\"form-control\" name=\"password\" required value={this.state.password} onChange={this.onChange} />\r\n                                </div>\r\n                                <input type=\"submit\" value=\"Login\" className=\"btn btn-primary btn-block\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nLogin.protoTypes={\r\n    firebase: PropTypes.object.isRequired\r\n}\r\n\r\nexport default firebaseConnect()(Login)\r\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport { UserIsAuthenticated, UserIsNotAuthenticated } from './components/helpers/auth'\n\nimport { Provider } from 'react-redux'\nimport { store, rrfProps } from './store'\nimport { ReactReduxFirebaseProvider } from 'react-redux-firebase'\n\nimport AppNavbar from './components/layouts/AppNavbar'\nimport Dashboard from './components/layouts/Dashboard'\nimport AddClient from './components/clients/AddClient'\nimport EditClient from './components/clients/EditClient'\nimport ClientDetails from './components/clients/ClientDetails'\nimport Login from './components/auth/Login'\n\nimport './App.css';\n\n\nfunction App() {\n\n  return (\n    <Provider store={store}>\n      <ReactReduxFirebaseProvider {...rrfProps}>\n        <Router>\n          <div className=\"App\">\n            <AppNavbar />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={UserIsAuthenticated(Dashboard)} />\n                <Route exact path=\"/client/add\" component={UserIsAuthenticated(AddClient)} />\n                <Route exact path=\"/client/edit/:id\" component={UserIsAuthenticated(EditClient)} />\n                <Route exact path=\"/client/:id\" component={UserIsAuthenticated(ClientDetails)} />\n                <Route exact path=\"/login\" component={UserIsNotAuthenticated(Login)} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </ReactReduxFirebaseProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}