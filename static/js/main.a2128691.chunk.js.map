{"version":3,"sources":["components/layouts/Spinner.js","components/helpers/auth.js","reducers/notifyReducer.js","store.js","actions/types.js","reducers/settingsReducer.js","components/layouts/AppNavbar.js","components/clients/Clients.js","components/layouts/Sidebar.js","components/layouts/Dashboard.js","components/clients/AddClient.js","components/clients/EditClient.js","components/clients/ClientDetails.js","actions/notifyActions.js","components/layouts/Alert.js","components/auth/Login.js","components/auth/Register.js","components/settings/Settings.js","actions/settingsActions.js","App.js","serviceWorker.js","index.js"],"names":["Spinner","className","locationHelper","locationHelperBuilder","UserIsAuthenticated","connectedRouterRedirect","wrapperDisplayName","AuthenticatingComponent","LoadingScreen","allowRedirectBack","redirectPath","state","ownProps","getRedirectQueryParam","authenticatingSelector","firebase","auth","isInitializing","profile","isLoaded","authenticatedSelector","isEmpty","UserIsNotAuthenticated","initialState","message","messageType","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","rootReducer","combineReducers","firebaseReducer","firestoreReducer","notify","action","type","settings","disableBalanceOnAdd","payload","disableBalanceOnEdit","allowRegistration","localStorage","getItem","setItem","JSON","stringify","parse","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","rrfProps","config","userProfile","useFirestoreForProfile","dispatch","createFirestoreInstance","AppNavbar","isAuthenticated","onLogoutClick","e","preventDefault","props","logout","this","to","href","data-toggle","data-target","id","Fragment","email","onClick","uid","Component","protoTypes","PropTypes","object","isRequired","compose","firebaseConnect","connect","Clients","totalOwed","clients","parseFloat","toFixed","map","client","key","firstName","lastName","balance","reduce","total","toString","firestoreConnect","collection","ordered","Sidebar","Dashboard","AddClient","phone","onChange","setState","target","name","value","onSubmit","newClient","history","add","then","push","htmlFor","minLength","required","disabled","prototypes","EditClient","updClient","current","update","doc","React","createRef","ref","defaultValue","storeAs","match","params","ClientDetails","showBalanceUpdate","balanceUpdateAmount","balanceSubmit","clientUpdate","onDelete","delete","balanceForm","placeholder","classnames","style","notifyUser","Alert","Login","password","login","catch","err","func","Register","createUser","Settings","disableBalanceOnAddChange","setDisableBalanceOnAdd","disableBalanceOnEditChange","setDisableBalanceOnEdit","allowRegistrationChange","setAllowRegistration","for","checked","App","exact","path","component","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console"],"mappings":"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","file":"static/js/main.a2128691.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Spinner() {\r\n    return (\r\n        <div className=\"row mt-5\">\r\n            <i className=\"fas fa-circle-notch fa-spin fa-3x align-middle mr-5 col-12\"></i>\r\n        </div>\r\n    )\r\n}","import locationHelperBuilder from 'redux-auth-wrapper/history4/locationHelper'\r\nimport { connectedRouterRedirect } from 'redux-auth-wrapper/history4/redirect'\r\n// import createHistory from 'history/createBrowserHistory'\r\nimport LoadingScreen from '../layouts/Spinner'\r\n\r\nconst locationHelper = locationHelperBuilder({});\r\n// const browserHistory = createHistory()\r\n\r\nexport const UserIsAuthenticated = connectedRouterRedirect({\r\n  wrapperDisplayName: 'UserIsAuthenticated',\r\n  AuthenticatingComponent: LoadingScreen,\r\n  allowRedirectBack: true,\r\n  redirectPath: (state, ownProps) =>\r\n    locationHelper.getRedirectQueryParam(ownProps) || '/login',\r\n  authenticatingSelector: ({ firebase: { auth, profile, isInitializing } }) =>\r\n    !auth.isLoaded || isInitializing === true,\r\n  authenticatedSelector: ({ firebase: { auth } }) =>\r\n    auth.isLoaded && !auth.isEmpty\r\n});\r\n\r\nexport const UserIsNotAuthenticated = connectedRouterRedirect({\r\n  wrapperDisplayName: 'UserIsNotAuthenticated',\r\n  AuthenticatingComponent: LoadingScreen,\r\n  allowRedirectBack: false,\r\n  redirectPath: (state, ownProps) =>\r\n    locationHelper.getRedirectQueryParam(ownProps) || '/',\r\n  authenticatingSelector: ({ firebase: { auth, isInitializing } }) =>\r\n    !auth.isLoaded || isInitializing === true,\r\n  authenticatedSelector: ({ firebase: { auth } }) =>\r\n    auth.isLoaded && auth.isEmpty\r\n});","import { NOTIFY_USER } from '../actions/types'\r\n\r\nconst initialState = {\r\n    message: null,\r\n    messageType: null\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case NOTIFY_USER:\r\n            return {\r\n                ...state,\r\n                message: action.message,\r\n                messageType: action.messageType\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { createStore, combineReducers } from 'redux'\r\nimport firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\nimport 'firebase/database'\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\nimport { firestoreReducer, createFirestoreInstance } from 'redux-firestore'\r\nimport notifyReducer from './reducers/notifyReducer'\r\nimport settingsReducer from './reducers/settingsReducer'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAS_Y1ffT4ObeMy6c74dvBEPTETU3qyNRs\",\r\n    authDomain: \"react-client-panel-9832d.firebaseapp.com\",\r\n    databaseURL: \"https://react-client-panel-9832d.firebaseio.com\",\r\n    projectId: \"react-client-panel-9832d\",\r\n    storageBucket: \"react-client-panel-9832d.appspot.com\",\r\n    messagingSenderId: \"1822124726\",\r\n    appId: \"1:1822124726:web:2755c7db05d7b9da8c5417\"\r\n}\r\n\r\n//react-redux-firebase configuration\r\nconst rrfConfig = {\r\n    userProfile: 'users',\r\n    useFirestoreForProfile: true // Firestore for Profile instead of Realtime DB\r\n}\r\n\r\n//Init firebase instance\r\nfirebase.initializeApp(firebaseConfig)\r\n//Init firestore\r\nfirebase.firestore()\r\n\r\nconst rootReducer = combineReducers({\r\n    firebase: firebaseReducer,\r\n    firestore: firestoreReducer,\r\n    notify: notifyReducer,\r\n    settings: settingsReducer\r\n})\r\n\r\n//Check for settings in localStorage\r\nif (localStorage.getItem('settings') == null) {\r\n    //Defualt settings\r\n    const defaultSettings = {\r\n        disableBalanceOnAdd: true,\r\n        disableBalanceOnEdit: false,\r\n        allowRegistration: false\r\n    }\r\n\r\n    //Se to localStorage\r\n    localStorage.setItem('settings', JSON.stringify(defaultSettings))\r\n}\r\n\r\n//Create intial state\r\nconst initialState = { settings: JSON.parse(localStorage.getItem('settings')) };\r\n\r\nexport let store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n)\r\n\r\nexport let rrfProps = {\r\n    firebase,\r\n    config: rrfConfig,\r\n    dispatch: store.dispatch,\r\n    createFirestoreInstance // <- needed if using firestore\r\n}","export const NOTIFY_USER = 'NOTIFY_USER'\r\nexport const DISABLE_BALANCE_ON_ADD = 'DISABLE_BALANCE_ON_ADD'\r\nexport const DISABLE_BALANCE_ON_EDIT = 'DISABLE_BALANCE_ON_EDIT'\r\nexport const ALLOW_REGISTRATION = 'ALLOW_REGISTRATION'","import { DISABLE_BALANCE_ON_ADD, DISABLE_BALANCE_ON_EDIT, ALLOW_REGISTRATION } from '../actions/types'\r\n\r\nexport default function (state = {}, action) {\r\n    switch (action.type) {\r\n        case DISABLE_BALANCE_ON_ADD:\r\n            return {\r\n                ...state,\r\n                disableBalanceOnAdd: action.payload\r\n            }\r\n        case DISABLE_BALANCE_ON_EDIT:\r\n            return {\r\n                ...state,\r\n                disableBalanceOnEdit: action.payload\r\n            }\r\n        case ALLOW_REGISTRATION:\r\n            return {\r\n                ...state,\r\n                allowRegistration: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport { compose } from 'redux'\r\nimport { connect } from 'react-redux'\r\nimport { firebaseConnect } from 'react-redux-firebase'\r\n\r\nclass AppNavbar extends Component {\r\n    state = {\r\n        isAuthenticated: true\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { auth } = props\r\n\r\n        if (auth.uid) {\r\n            return { isAuthenticated: true }\r\n        } else {\r\n            return { isAuthenticated: false }\r\n        }\r\n    }\r\n\r\n    onLogoutClick = e => {\r\n        e.preventDefault()\r\n\r\n        const { firebase } = this.props\r\n        firebase.logout()\r\n    }\r\n\r\n    render() {\r\n        const { isAuthenticated } = this.state\r\n        const { auth } = this.props\r\n        const { allowRegistration } = this.props.settings\r\n        return (\r\n            <nav className=\"navbar navbar-expand-md navbar-dark bg-primary mb-4\">\r\n                <Link to=\"/\" className=\"navbar-brand\" href=\"#\">Client Panel</Link>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\">\r\n                    <span className=\"navbar-toggler-icon\" />\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                    {isAuthenticated ? (<React.Fragment>\r\n                        <ul className=\"navbar-nav mr-auto\" data-toggle=\"collapse\" data-target=\"#navbarNav\">\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/\" className=\"nav-link\">Dashboard</Link>\r\n                            </li>\r\n                        </ul>\r\n                        <ul className=\"navbar-nav ml-auto\" data-toggle=\"collapse\" data-target=\"#navbarNav\">\r\n                            <li className=\"nav-item\">\r\n                                <span className=\"nav-link\">{auth.email}</span>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/Settings\" className=\"nav-link\">Settings</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a href=\"#!\" onClick={this.onLogoutClick} className=\"nav-link\">Logout</a>\r\n                            </li>\r\n                        </ul>\r\n                    </React.Fragment>\r\n                    ) : null}\r\n\r\n                    {allowRegistration && !isAuthenticated ? (\r\n                        <ul className=\"navbar-nav ml-auto\" data-toggle=\"collapse\" data-target=\"#navbarNav\">\r\n                        <li className=\"nav-item\">\r\n                        <Link to=\"/Login\" className=\"nav-link\">Login</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/Register\" className=\"nav-link\">Register</Link>\r\n                        </li>\r\n                    </ul>\r\n                    ): null}\r\n\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nAppNavbar.protoTypes = {\r\n    firebase: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    settings: PropTypes.object.isRequired\r\n}\r\n\r\nexport default compose(\r\n    firebaseConnect(),\r\n    connect((state, props) => ({\r\n        auth: state.firebase.auth,\r\n        settings: state.settings\r\n    }))\r\n)(AppNavbar)\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport { compose } from 'redux'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport Spinner from '../layouts/Spinner'\r\n\r\nclass Clients extends Component {\r\n    state = {\r\n        totalOwed: null\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.clients !== state.clients) {\r\n            const { clients } = props\r\n            if (clients) {\r\n                const total = clients.reduce((total, client) => {\r\n                    return total + parseFloat(client.balance.toString())\r\n                }, 0)\r\n                return { totalOwed: total }\r\n            } return null\r\n        } return null\r\n    }\r\n\r\n    render() {\r\n        const { clients } = this.props\r\n        const { totalOwed } = this.state\r\n\r\n        if (clients) {\r\n            return (\r\n                <span>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-6\">\r\n                            <h2>\r\n                                <i className=\"fas fa-users\"></i> Clients\r\n                            </h2>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <h5 className=\"text-right text-secondary\">\r\n                                Total Owed:\r\n                                <span className=\"text-primary\">\r\n                                    ${parseFloat(totalOwed).toFixed(2)}\r\n                                </span>\r\n                            </h5>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <table className=\"table table-striped table-responsive\">\r\n                        <thead className=\"thead inverse\">\r\n                            <tr>\r\n                                <th>Name</th>\r\n                                <th>Email</th>\r\n                                <th>Balance</th>\r\n                                <th />\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {clients.map(client => (\r\n                                <tr key={client.id}>\r\n                                    <td>{client.firstName} {client.lastName}</td>\r\n                                    <td>{client.email}</td>\r\n                                    <td>${parseFloat(client.balance).toFixed(2)}</td>\r\n                                    <td>\r\n                                        <Link to={`/client/${client.id}`} className=\"btn btn-secondary btn-sm\"><i className=\"fas fa-arrow-circle-right\"></i> Details</Link>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </span>\r\n            )\r\n        }\r\n        else {\r\n            return <Spinner />\r\n        }\r\n    }\r\n}\r\nClients.propTypes = {\r\n    firestore: PropTypes.object.isRequired,\r\n    clients: PropTypes.array\r\n}\r\n\r\nexport default compose(\r\n    firestoreConnect(props => [{ collection: 'clients' }]),\r\n    connect((state, props) => ({\r\n        clients: state.firestore.ordered.clients\r\n    }))\r\n)(Clients)","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Sidebar() {\r\n    return (\r\n        <span>\r\n            <Link to=\"/client/add\" className=\"btn btn-success btn-sm\"><i className=\"fa fa-plus-circle\" /> New</Link>\r\n        </span>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import React from 'react'\r\nimport Clients from '../clients/Clients'\r\nimport Sidebar from '../layouts/Sidebar'\r\n\r\nfunction Dashboard() {\r\n    return (\r\n        <span className=\"row\">\r\n            <span className=\"col-10\">\r\n                <Clients />\r\n            </span>\r\n            <span className=\"col-2\">\r\n                <Sidebar />\r\n            </span>\r\n        </span>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport { compose } from 'redux'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\n\r\nclass AddClient extends Component {\r\n    state = {\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        phone: '',\r\n        balance: ''\r\n    }\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value })\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        const newClient = this.state\r\n        const { firestore, history } = this.props\r\n\r\n        if (newClient.balance === '') newClient.balance = 0\r\n\r\n        firestore.add({ collection: 'clients' }, newClient).then(() => history.push('/'))\r\n    }\r\n\r\n    render() {\r\n        let { firstName, lastName, email, phone, balance } = this.state\r\n        const { disableBalanceOnAdd } = this.props.settings\r\n        return (\r\n            <span>\r\n                <div className=\"row mb-2\">\r\n                    <div className=\"col-6\">\r\n                        <Link to=\"/\" className=\"btn btn-link\">\r\n                            <i className=\"fas fa-arrow-circle-left\" /> Back\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"card\">\r\n                    <div className=\"card-header\"><h3>Add Cient</h3></div>\r\n                    <div className=\"card-body\">\r\n                        <form onSubmit={this.onSubmit}>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"firstName\">First Name</label>\r\n                                <input type=\"text\" className=\"form-control\" name=\"firstName\" minLength=\"2\" required onChange={this.onChange} value={firstName} />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"lastName\">Last Name</label>\r\n                                <input type=\"text\" className=\"form-control\" name=\"lastName\" minLength=\"2\" required onChange={this.onChange} value={lastName} />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"email\">Email</label>\r\n                                <input type=\"email\" className=\"form-control\" name=\"email\" required onChange={this.onChange} value={email} />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"phone\">Phone</label>\r\n                                <input type=\"text\" className=\"form-control\" name=\"phone\" minLength=\"10\" required onChange={this.onChange} value={phone} />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"balance\">Balance</label>\r\n                                <input type=\"text\" className=\"form-control\" name=\"balance\" onChange={this.onChange} value={balance} disabled={disableBalanceOnAdd}/>\r\n                            </div>\r\n                            <input type=\"submit\" value=\"Submit\" className=\"btn btn-primary btn-block\" />\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </span>\r\n        )\r\n    }\r\n}\r\n\r\nAddClient.prototypes = {\r\n    firestore: PropTypes.object.isRequired,\r\n    settings: PropTypes.object.isRequired\r\n}\r\n\r\nexport default compose(\r\n    firestoreConnect(),\r\n    connect((state, props) => ({\r\n        settings: state.settings\r\n    }))\r\n)(AddClient)","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport { compose } from 'redux'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport Spinner from '../layouts/Spinner'\r\n\r\nclass EditClient extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.firstName = React.createRef()\r\n        this.lastName = React.createRef()\r\n        this.email = React.createRef()\r\n        this.phone = React.createRef()\r\n        this.balance = React.createRef()\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        const { client, firestore, history } = this.props\r\n\r\n        const updClient = {\r\n            firstName: this.firstName.current.value,\r\n            lastName: this.lastName.current.value,\r\n            email: this.email.current.value,\r\n            phone: this.phone.current.value,\r\n            balance: this.balance.current.value ? this.balance.current.value : 0\r\n        }\r\n\r\n        firestore\r\n            .update({ collection: 'clients', doc: client.id }, updClient)\r\n            .then(() => history.push('/'))\r\n    }\r\n\r\n    render() {\r\n        const { client } = this.props\r\n        const { disableBalanceOnEdit } = this.props.settings\r\n\r\n        if (client) {\r\n            return (\r\n                <span>\r\n                    <div className=\"row mb-2\">\r\n                        <div className=\"col-6\">\r\n                            <Link to=\"/\" className=\"btn btn-link\">\r\n                                <i className=\"fas fa-arrow-circle-left\" /> Back\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"card\">\r\n                        <div className=\"card-header\"><h3>Edit Cient</h3></div>\r\n                        <div className=\"card-body\">\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"firstName\">First Name</label>\r\n                                    <input type=\"text\" className=\"form-control\" name=\"firstName\" minLength=\"2\" required onChange={this.onChange} ref={this.firstName} defaultValue={client.firstName} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"lastName\">Last Name</label>\r\n                                    <input type=\"text\" className=\"form-control\" name=\"lastName\" minLength=\"2\" required onChange={this.onChange} ref={this.lastName} defaultValue={client.lastName} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"email\">Email</label>\r\n                                    <input type=\"email\" className=\"form-control\" name=\"email\" required onChange={this.onChange} ref={this.email} defaultValue={client.email} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"phone\">Phone</label>\r\n                                    <input type=\"text\" className=\"form-control\" name=\"phone\" minLength=\"10\" required onChange={this.onChange} ref={this.phone} defaultValue={client.phone} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"balance\">Balance</label>\r\n                                    <input type=\"text\" className=\"form-control\" name=\"balance\" onChange={this.onChange} ref={this.balance} defaultValue={client.balance} disabled={disableBalanceOnEdit} />\r\n                                </div>\r\n                                <input type=\"submit\" value=\"Submit\" className=\"btn btn-primary btn-block\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </span>\r\n            )\r\n        } else {\r\n            return <Spinner />\r\n        }\r\n    }\r\n}\r\n\r\nEditClient.prototypes = {\r\n    firestore: PropTypes.object.isRequired\r\n}\r\n\r\nexport default compose(\r\n    firestoreConnect(props => [\r\n        { collection: 'clients', storeAs: 'client', doc: props.match.params.id }\r\n    ]),\r\n    connect(({ firestore: { ordered }, settings }, props) => ({\r\n        client: ordered.client && ordered.client[0],\r\n        settings\r\n    }))\r\n)(EditClient)","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport { compose } from 'redux'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport Spinner from '../layouts/Spinner'\r\nimport classnames from 'classnames'\r\n\r\nclass ClientDetails extends Component {\r\n    state = {\r\n        showBalanceUpdate: false,\r\n        balanceUpdateAmount: ''\r\n    }\r\n\r\n    balanceSubmit = e => {\r\n        e.preventDefault()\r\n\r\n        const { client, firestore } = this.props\r\n        const { balanceUpdateAmount } = this.state\r\n\r\n        const clientUpdate = {\r\n            balance: parseFloat(balanceUpdateAmount)\r\n        }\r\n        firestore.update({ collection: 'clients', doc: client.id }, clientUpdate)\r\n    }\r\n\r\n    onChange = e => this.setState({ [e.target.name]: e.target.value })\r\n    onDelete = () => {\r\n        const { client, firestore, history } = this.props\r\n\r\n        firestore\r\n            .delete({ collection: 'clients', doc: client.id })\r\n            .then(history.push('/'))\r\n    }\r\n\r\n    render() {\r\n        const { client } = this.props\r\n        const { showBalanceUpdate, balanceUpdateAmount } = this.state\r\n\r\n        let balanceForm = ''\r\n        if (showBalanceUpdate) {\r\n            balanceForm = (\r\n                <form onSubmit={this.balanceSubmit}>\r\n                    <div className=\"input-group\">\r\n                        <input type=\"number\" required className=\"form-control\" name=\"balanceUpdateAmount\" placeholder=\"Add New Balance\" value={balanceUpdateAmount} onChange={this.onChange} />\r\n                        <div className=\"input-group-append\">\r\n                            <input type=\"submit\" value=\"Update\" className=\"btn btn-outline-dark\" />\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            )\r\n        } else {\r\n            balanceForm = null\r\n        }\r\n\r\n        if (client) {\r\n            return (\r\n                <span>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-6\">\r\n                            <Link to=\"/\" className=\"btn btn-link\">\r\n                                <i className=\"fas fa-arrow-circle-left\"></i> Back\r\n                            </Link>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <div className=\"btn-group float-right\">\r\n                                <Link to={`/client/edit/${client.id}`} className=\"btn btn-sm btn-dark\">Edit</Link>\r\n                                <button onClick={this.onDelete} className=\"btn btn-sm btn-danger\">Delete</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <hr />\r\n                    <div className=\"card\">\r\n                        <h4 className=\"card-header\">\r\n                            {client.firstName} {client.lastName}\r\n                        </h4>\r\n                        <div className=\"card-body\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-6\">\r\n                                    <h5>Client ID:{' '}<span className=\"text-secondary\">{client.id}</span></h5>\r\n                                </div>\r\n                                <div className=\"col-6\">\r\n                                    <h4 className=\"pull-right\">\r\n                                        Balance:\r\n                                        <span className={classnames({\r\n                                        'text-danger': client.balance > 0,\r\n                                        'text-success': client.balance <= 0\r\n                                    })}>\r\n                                            {' '}${parseFloat(client.balance).toFixed(2)}{' '}\r\n                                        </span>\r\n                                        <small>\r\n                                            <a href=\" \" onClick={(e) => { this.setState({ showBalanceUpdate: !this.state.showBalanceUpdate }); e.preventDefault() }}>\r\n                                                <i className=\"fas fa-pencil-alt\" style={{}}></i>\r\n                                            </a>\r\n                                        </small>\r\n                                    </h4>\r\n                                    {balanceForm}\r\n                                </div>\r\n                            </div>\r\n                            <hr />\r\n                            <ul className=\"list-group\">\r\n                                <li className=\"list-group-item\">Contact Email: {client.email}</li>\r\n                                <li className=\"list-group-item\">Contact Phone: {client.phone}</li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </span>\r\n            )\r\n        } else {\r\n            return <Spinner />\r\n        }\r\n    }\r\n}\r\n\r\nClientDetails.prototypes = {\r\n    firestore: PropTypes.object.isRequired\r\n}\r\n\r\nexport default compose(\r\n    firestoreConnect(props => [\r\n        { collection: 'clients', storeAs: 'client', doc: props.match.params.id }\r\n    ]),\r\n    connect(({ firestore: { ordered } }, props) => ({\r\n        client: ordered.client && ordered.client[0]\r\n    }))\r\n)(ClientDetails)","import { NOTIFY_USER } from './types'\r\n\r\nexport const notifyUser = (message, messageType) => {\r\n    return {\r\n        type: NOTIFY_USER,\r\n        message,\r\n        messageType\r\n    }\r\n}\r\n","import React from 'react'\r\nimport classnames from 'classnames'\r\nimport PropTypes from 'prop-types'\r\nconst Alert = (props) => {\r\n    const { message, messageType } = props\r\n    return (\r\n        <div className={classnames('alert', {\r\n            'alert-success': messageType === 'success',\r\n            'alert-danger': messageType === 'error'\r\n        })}>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\nAlert.propTypes = {\r\n    message: PropTypes.string.isRequired,\r\n    messageType: PropTypes.string.isRequired,\r\n    notifyUser:PropTypes.func.isRequired\r\n}\r\n\r\nexport default (Alert)\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { compose } from 'redux'\r\nimport { connect } from 'react-redux'\r\nimport { firebaseConnect } from 'react-redux-firebase'\r\nimport { notifyUser } from '../../actions/notifyActions'\r\nimport Alert from '../layouts/Alert'\r\n\r\nclass Login extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n\r\n    onChange = e => this.setState({ [e.target.name]: e.target.value })\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const { firebase, notifyUser } = this.props\r\n        const { email, password } = this.state\r\n\r\n        firebase\r\n            .login({ email, password })\r\n            .then(notifyUser('', ''))\r\n            .catch(err => notifyUser('Invalid Login Credentials', 'error'))\r\n    }\r\n\r\n\r\n    render() {\r\n        const { message, messageType } = this.props.notify\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 mx-auto\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            {message ? (\r\n                                <Alert message={message} messageType={messageType} />\r\n                            ) : null}\r\n                            <h2 className=\"text-center pb-4 pt-3\">\r\n                                <span className=\"text-primary\">\r\n                                <i className=\"fas fa-sign-in-alt\" />{' '}\r\n                                    Login\r\n                                </span>\r\n                            </h2>\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"email\">Email</label>\r\n                                    <input type=\"text\" className=\"form-control\" name=\"email\" required value={this.state.email} onChange={this.onChange} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"password\">Password</label>\r\n                                    <input type=\"password\" className=\"form-control\" name=\"password\" required value={this.state.password} onChange={this.onChange} />\r\n                                </div>\r\n                                <input type=\"submit\" value=\"Login\" className=\"btn btn-primary btn-block\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nLogin.protoTypes = {\r\n    firebase: PropTypes.object.isRequired,\r\n    notify:PropTypes.object.isRequired,\r\n    notifyUser: PropTypes.func.isRequired\r\n}\r\n\r\nexport default compose(\r\n    firebaseConnect(),\r\n    connect((state, props) => ({\r\n        notify: state.notify\r\n    }), { notifyUser })\r\n)\r\n    (Login)\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { compose } from 'redux'\r\nimport { connect } from 'react-redux'\r\nimport { firebaseConnect } from 'react-redux-firebase'\r\nimport { notifyUser } from '../../actions/notifyActions'\r\nimport Alert from '../layouts/Alert'\r\n\r\nclass Register extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n\r\n    componentWillMount() {\r\n        const { allowRegistration } = this.props.settings\r\n\r\n        if (!allowRegistration) {   \r\n            this.props.history.push('/')\r\n        }\r\n    }\r\n\r\n    onChange = e => this.setState({ [e.target.name]: e.target.value })\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const { firebase, notifyUser } = this.props\r\n        const { email, password } = this.state\r\n\r\n        firebase\r\n            .createUser({ email, password })\r\n            .then(notifyUser('', ''))\r\n            .catch(err => notifyUser('User already exists', 'error'))\r\n    }\r\n\r\n\r\n    render() {\r\n        const { message, messageType } = this.props.notify\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 mx-auto\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            {message ? (\r\n                                <Alert message={message} messageType={messageType} />\r\n                            ) : null}\r\n                            <h2 className=\"text-center pb-4 pt-3\">\r\n                                <span className=\"text-primary\">\r\n                                    <i className=\"fas fa-sign-in-alt\" />{' '}\r\n                                    Register\r\n                                </span>\r\n                            </h2>\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"email\">Email</label>\r\n                                    <input type=\"text\" className=\"form-control\" name=\"email\" required value={this.state.email} onChange={this.onChange} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"password\">Password</label>\r\n                                    <input type=\"password\" className=\"form-control\" name=\"password\" required value={this.state.password} onChange={this.onChange} />\r\n                                </div>\r\n                                <input type=\"submit\" value=\"Register\" className=\"btn btn-primary btn-block\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nRegister.protoTypes = {\r\n    firebase: PropTypes.object.isRequired,\r\n    notify: PropTypes.object.isRequired,\r\n    notifyUser: PropTypes.func.isRequired,\r\n    settings: PropTypes.object.isRequired\r\n}\r\n\r\nexport default compose(\r\n    firebaseConnect(),\r\n    connect((state, props) => ({\r\n        notify: state.notify,\r\n        settings: state.settings\r\n    }), { notifyUser })\r\n)\r\n    (Register)\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { setAllowRegistration, setDisableBalanceOnAdd, setDisableBalanceOnEdit } from '../../actions/settingsActions'\r\n\r\nclass Settings extends Component {\r\n    disableBalanceOnAddChange = () => {\r\n        const { setDisableBalanceOnAdd } = this.props\r\n        setDisableBalanceOnAdd()\r\n    }\r\n    disableBalanceOnEditChange = () => {\r\n        const { setDisableBalanceOnEdit } = this.props\r\n        setDisableBalanceOnEdit()\r\n    }\r\n    allowRegistrationChange = () => {\r\n        const { setAllowRegistration } = this.props\r\n        setAllowRegistration()\r\n    }\r\n\r\n    render() {\r\n        const { disableBalanceOnAdd, disableBalanceOnEdit, allowRegistration } = this.props.settings\r\n        return (\r\n            <div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                        <Link to=\"/\" className=\"btn btn-link\">\r\n                            <i className=\"fas fa-arrow-circle-left\" /> Back To Dashboard\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"card\">\r\n                    <div className=\"card-header\"><h4>Edit Settings</h4></div>\r\n                    <div className=\"card-body\">\r\n                        <form>\r\n                            <div className=\"form-group form-check\">\r\n                                <label className=\"form-check-label\" for=\"allowRegistration\">Allow Registration</label>{' '}\r\n                                <input type=\"checkbox\" name=\"allowRegistration\" checked={!!allowRegistration} onChange={this.allowRegistrationChange} />\r\n                            </div>\r\n                            <div className=\"form-group form-check\">\r\n                                <label className=\"form-check-label\" for=\"disableBalanceOnAdd\">Disable Balance On Add</label>{' '}\r\n                                <input type=\"checkbox\" name=\"disableBalanceOnAdd\" checked={!!disableBalanceOnAdd} onChange={this.disableBalanceOnAddChange} />\r\n                            </div>\r\n                            <div className=\"form-group form-check\">\r\n                                <label className=\"form-check-label\" for=\"disableBalanceOnEdit\">Disable Balance On Edit</label>{' '}\r\n                                <input type=\"checkbox\" name=\"disableBalanceOnEdit\" checked={!!disableBalanceOnEdit} onChange={this.disableBalanceOnEditChange} />\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nSettings.propTypes = {\r\n    settings: PropTypes.object.isRequired,\r\n    setDisableBalanceOnAdd: PropTypes.func.isRequired,\r\n    setDisableBalanceOnEdit: PropTypes.func.isRequired,\r\n    setAllowRegistration: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(\r\n    (state, props) => ({\r\n        auth: state.firebase.auth,\r\n        settings: state.settings\r\n    }), { setAllowRegistration, setDisableBalanceOnAdd, setDisableBalanceOnEdit }\r\n)(Settings)\r\n","import { DISABLE_BALANCE_ON_ADD, DISABLE_BALANCE_ON_EDIT, ALLOW_REGISTRATION } from './types'\r\n\r\nexport const setDisableBalanceOnAdd = () => {\r\n    const settings = JSON.parse(localStorage.getItem('settings'))\r\n    settings.disableBalanceOnAdd = !settings.disableBalanceOnAdd\r\n    localStorage.setItem('settings', JSON.stringify(settings))\r\n    return {\r\n        type: DISABLE_BALANCE_ON_ADD,\r\n        payload: settings.disableBalanceOnAdd\r\n    }\r\n}\r\n\r\nexport const setDisableBalanceOnEdit = () => {\r\n    const settings = JSON.parse(localStorage.getItem('settings'))\r\n    settings.disableBalanceOnEdit = !settings.disableBalanceOnEdit\r\n    localStorage.setItem('settings', JSON.stringify(settings))\r\n    return {\r\n        type: DISABLE_BALANCE_ON_EDIT,\r\n        payload: settings.disableBalanceOnEdit\r\n    }\r\n}\r\n\r\nexport const setAllowRegistration = () => {\r\n    const settings = JSON.parse(localStorage.getItem('settings'))\r\n    settings.allowRegistration = !settings.allowRegistration\r\n    localStorage.setItem('settings', JSON.stringify(settings))\r\n    return {\r\n        type: ALLOW_REGISTRATION,\r\n        payload: settings.allowRegistration\r\n    }\r\n}\r\n","import React from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'\nimport { UserIsAuthenticated, UserIsNotAuthenticated } from './components/helpers/auth'\n\nimport { Provider } from 'react-redux'\nimport { store, rrfProps } from './store'\nimport { ReactReduxFirebaseProvider } from 'react-redux-firebase'\n\nimport AppNavbar from './components/layouts/AppNavbar'\nimport Dashboard from './components/layouts/Dashboard'\nimport AddClient from './components/clients/AddClient'\nimport EditClient from './components/clients/EditClient'\nimport ClientDetails from './components/clients/ClientDetails'\nimport Login from './components/auth/Login'\nimport Register from './components/auth/Register'\nimport Settings from './components/settings/Settings'\n\nimport './App.css';\n\n\nfunction App() {\n\n  return (\n    <Provider store={store}>\n      <ReactReduxFirebaseProvider {...rrfProps}>\n        <Router>\n          <div className=\"App\">\n            <AppNavbar />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={UserIsAuthenticated(Dashboard)} />\n                <Route exact path=\"/client/add\" component={UserIsAuthenticated(AddClient)} />\n                <Route exact path=\"/client/edit/:id\" component={UserIsAuthenticated(EditClient)} />\n                <Route exact path=\"/client/:id\" component={UserIsAuthenticated(ClientDetails)} />\n                <Route exact path=\"/login\" component={UserIsNotAuthenticated(Login)} />\n                <Route exact path=\"/register\" component={UserIsNotAuthenticated(Register)} />\n                <Route exact path=\"/settings\" component={UserIsAuthenticated(Settings)} />\n                \n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </ReactReduxFirebaseProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}